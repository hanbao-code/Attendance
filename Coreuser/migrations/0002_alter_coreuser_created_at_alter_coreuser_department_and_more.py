# Generated by Django 5.2 on 2025-05-06 15:03

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('Coreuser', '0001_initial'),
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.AlterField(
            model_name='coreuser',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, help_text='用户账户创建的日期和时间', verbose_name='创建时间'),
        ),
        migrations.AlterField(
            model_name='coreuser',
            name='department',
            field=models.CharField(help_text='用户所属的公司部门或团队', max_length=100, verbose_name='部门'),
        ),
        migrations.AlterField(
            model_name='coreuser',
            name='email',
            field=models.EmailField(help_text='用户的电子邮箱地址', max_length=254, verbose_name='邮箱'),
        ),
        migrations.AlterField(
            model_name='coreuser',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='用户所属的权限组', related_name='coreuser_set', related_query_name='user', to='auth.group', verbose_name='用户组'),
        ),
        migrations.AlterField(
            model_name='coreuser',
            name='is_super_admin',
            field=models.BooleanField(default=False, help_text='指定用户是否为超级管理员，拥有最高权限', verbose_name='是否超级管理员'),
        ),
        migrations.AlterField(
            model_name='coreuser',
            name='last_login',
            field=models.DateTimeField(auto_now=True, help_text='用户最后一次登录系统的日期和时间', null=True, verbose_name='上次登录时间'),
        ),
        migrations.AlterField(
            model_name='coreuser',
            name='name',
            field=models.CharField(help_text='用户的中文全名', max_length=100, verbose_name='姓名'),
        ),
        migrations.AlterField(
            model_name='coreuser',
            name='phone',
            field=models.CharField(help_text='用户的联系电话号码', max_length=20, verbose_name='电话'),
        ),
        migrations.AlterField(
            model_name='coreuser',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='用户拥有的特定权限', related_name='coreuser_set', related_query_name='user', to='auth.permission', verbose_name='用户权限'),
        ),
    ]
